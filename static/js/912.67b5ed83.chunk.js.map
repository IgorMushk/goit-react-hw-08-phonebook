{"version":3,"file":"static/js/912.67b5ed83.chunk.js","mappings":"kPAEaA,EAAYC,EAAAA,GAAAA,IAAH,iQAaTC,EAAQD,EAAAA,GAAAA,GAAH,8GAOLE,EAAYF,EAAAA,GAAAA,GAAH,8G,mBCpBTG,EAAOH,EAAAA,GAAAA,KAAH,mFAMJI,EAAQJ,EAAAA,GAAAA,MAAH,2GAOLK,EAASL,EAAAA,GAAAA,MAAH,4XAmBNM,EAASN,EAAAA,GAAAA,OAAH,+T,UClCNO,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAChBC,EAAiB,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,SCI5B,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXV,GAAYW,EAAAA,EAAAA,IAAYb,GAsB9B,OACE,+BACE,UAACJ,EAAD,CAAMkB,SAtBY,SAAAC,GACpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OAKjB,GAHyBhB,EAASiB,MAChC,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBL,EAAKI,KAAKE,MAAMD,aAAnD,IAGPE,MAAM,GAAD,OAAIP,EAAKI,KAAKE,MAAd,gCADP,CAIA,IAAME,EAAY,CAEdJ,KAAMJ,EAAKI,KAAKE,MAChBG,OAAQT,EAAKS,OAAOH,OAExBZ,GAASgB,EAAAA,EAAAA,IAAWF,IACpBR,EAAKW,OAPJ,CAQJ,EAIK,WACE,UAAC/B,EAAD,WAAO,QAEL,SAACC,EAAD,CACE+B,KAAK,OACLR,KAAK,OAELS,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACnC,EAAD,WAAO,UAEL,SAACC,EAAD,CACE+B,KAAK,MACLR,KAAK,SAELS,QAAQ,iGACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACjC,EAAD,CAAQ8B,KAAK,SAAb,SAAsB,oBAI7B,C,8BCtDYhC,GAJiBJ,EAAAA,GAAAA,IAAH,yCAINA,EAAAA,GAAAA,MAAH,4GAOLK,EAASL,EAAAA,GAAAA,MAAH,qVCPNwC,EAAe,SAAC,GAAsB,EAArBV,MAAqB,EAAdW,SAAe,IAC5CvB,GAAWC,EAAAA,EAAAA,MAMjB,OAEG,iCACC,SAAC,EAAD,CAAOuB,QAAQ,SAAf,SAAwB,2BACxB,SAAC,EAAD,CAAQN,KAAK,OAAOO,GAAG,SAASf,KAAK,SAASa,SAT3B,SAAAnB,GAErBJ,GAAS0B,EAAAA,EAAAA,GAAUtB,EAAIG,OAAOK,OAC/B,MAUF,E,oBClBYe,EAAS,WACpB,OACE,SAAC,KAAD,CACAC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,kBAERC,SAAS,EACTC,UAAU,0BAIb,ECjBYC,EAAOvD,EAAAA,GAAAA,GAAH,oFAMJwD,EAAOxD,EAAAA,GAAAA,GAAH,qGAMJyD,EAAWzD,EAAAA,GAAAA,EAAH,yJASRM,EAASN,EAAAA,GAAAA,OAAH,yWCdN0D,GDgCY1D,EAAAA,GAAAA,IAAH,6IChCK,SAAC,GAAsB,EAArB2D,gBAAsB,IAC3ClD,GAAYW,EAAAA,EAAAA,IAAYb,GAExBW,GAAWC,EAAAA,EAAAA,MACXyC,GAAcxC,EAAAA,EAAAA,IAAYL,GAajC,OACC,+BACF,SAACwC,EAAD,UAV4B9C,EAASO,QAAO,SAAAW,GAAO,OAC7CA,EAAQC,KAAKC,cAAcgC,SAASD,EAAY/B,cADH,IAW7BiC,KAAI,gBAAEnB,EAAF,EAAEA,GAAIf,EAAN,EAAMA,KAAMK,EAAZ,EAAYA,OAAZ,OAC1B,UAACuB,EAAD,YACI,UAACC,EAAD,YAAU,4BAAO7B,EAAK,UAAU,0BAAOK,IAAc,QACrD,SAAC,EAAD,CAAQ8B,QAAS,kBAAM7C,GAAS8C,EAAAA,EAAAA,IAAcrB,GAA7B,EAAjB,SAAoD,WAAe,MAF5DA,EADe,OAqBxB,G,UCpCa,SAASsB,IACtB,IAAM/C,GAAWC,EAAAA,EAAAA,MACXP,GAAYQ,EAAAA,EAAAA,IAAYT,GACxBG,GAAQM,EAAAA,EAAAA,IAAYP,GAM1B,OAJAqD,EAAAA,EAAAA,YAAU,WACRhD,GAASiD,EAAAA,EAAAA,MACV,GAAE,CAACjD,KAGF,UAACnB,EAAD,YACE,SAAC,IAAD,CACEqE,QAAM,EACNC,MAAO,CAAEC,aAAc,OACvBC,WACE,cAAGF,MAAO,CAAErB,MAAO,OAAQwB,OAAQ,OAAQF,aAAc,OAAzD,UACE,SAAC,MAAD,CAAkBG,KAAM,UAK5B,SAACxE,EAAD,UAAO,eAET,SAACgB,EAAD,KACA,SAACf,EAAD,UAAW,YACVU,IAAa,SAACiC,EAAD,KACd,SAACL,EAAD,IACC1B,GACC,wBAAI,0DAEJ,SAAC4C,EAAD,KAEF,SAAC,KAAD,CAAgBgB,UAAW,IAAMC,MAAM,cAG5C,C","sources":["components/App.styled.jsx","components/ContactForrm/ContactForm.Styled.jsx","redux/contacts/selectors.js","components/ContactForrm/ContactForm.jsx","components/Filter/FilterByName.styled.jsx","components/Filter/FilterByName.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.styled..jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  //height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-items: left;\n  //font-size: 40px;\n  color: #010101;\n  background-color: #e7ecf2;\n  padding-left: 10px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 34px;\n  font-weight: 700;\n`;\n\nexport const TitleList = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 4px;\n`;\n\nexport const Inpute = styled.input`\n  display: block;\n  margin-top: 5px;\n  width: 184px;\n  padding: 5px 10px;\n  font-weight: 400;\n  font-size: 14px;\n  border-radius: 5px;\n  //border: none;\n  border: 4px solid transparent;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  transition: all 300ms linear;\n  &:hover,\n  &:focus {\n    border: 4px solid #94c0f9;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 184px;\n  padding: 5px;\n  border: 4px solid transparent;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  transition: all 300ms linear;\n  outline: none;\n  &:hover,\n  &:focus {\n    border: 4px solid #94c0f9;\n    cursor: pointer;\n  }\n\n`;\n","export const getContacts = state => state.contacts.items;;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilterValue = state => state.filter;","//import { nanoid } from 'nanoid';\nimport { Button, Form, Inpute, Label } from './ContactForm.Styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts  = useSelector(getContacts)\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    //console.dir('ContactForm - evt.target ',evt.target);\n    const checkContactList = contacts.some(\n      contact => contact.name.toLowerCase() === form.name.value.toLowerCase()\n    );\n    if (checkContactList) {\n      alert(`${form.name.value} is already in contacts`);\n      return;\n    }\n    const newContact ={\n        // id: nanoid(),\n        name: form.name.value,\n        number: form.number.value\n    }\n    dispatch(addContact(newContact));\n    form.reset();\n};\n\n  return (\n    <>\n      <Form onSubmit={handlerSubmit}>\n        <Label>\n          Name\n          <Inpute\n            type=\"text\"\n            name=\"name\"\n            //pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Inpute\n            type=\"tel\"\n            name=\"number\"\n            //pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add Contact</Button>\n      </Form>\n    </>\n  );\n}\n\n","import { styled } from 'styled-components';\n\nexport const FiterContainer = styled.div`\n  width: 300px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 4px;\n`;\n\nexport const Inpute = styled.input`\n  width: 184px;\n  padding: 5px 10px;\n  font-weight: 400;\n  font-size: 14px;\n  border-radius: 4px;\n  //border: none;\n  border: 4px solid transparent;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  transition: all 300ms linear;\n  &:hover,\n  &:focus {\n    border: 4px solid #94c0f9;\n  }\n`;\n","//import { FiterContainer, Inpute, Label } from './FilterByName.styled';\n//import { setFilter } from 'redux/store';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Inpute, Label } from './FilterByName.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const FilterByName = ({value, onChange}) => {\n  const dispatch = useDispatch();\n  const onChangeFilter = evt => {\n    //console.log('FilterByName - evt.target.value ', evt.target.value);\n    dispatch(setFilter(evt.target.value))\n  };\n\n  return (\n    // <FiterContainer>\n     <>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Inpute type=\"text\" id=\"filter\" name=\"filter\" onChange={onChangeFilter} />\n     </>\n    // </FiterContainer> \n  );\n};\n","import React from 'react'\nimport { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n    height=\"100\"\n    width=\"100\"\n    color=\"#6b6565\"\n    wrapperStyle={{\n      position: 'absolute',\n      top: '50%',\n      left: 'calc(50%-50px)',\n    }}\n    visible={true}\n    ariaLabel=\"three-circles-rotating\"\n  />\n\n  )\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  padding-left: 0px;\n  width: 380px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ItemText = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 18px;\n  margin: 5px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: fit-content;\n  //width: 50px;\n  height: 24px;\n  border: 4px solid transparent;\n  border-radius: 2px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  outline: none;\n  &:hover,\n  &:focus {\n    //border: 2px solid #94c0f9;\n    cursor: pointer;\n    background-color: #51575e;\n    color: white;\n  }\n`;\n\nexport const Quantitas = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 50% - 20px;\n  font-size: 16px;\n  span {\n    font-weight: 600;\n  };\n`;\n","//import { Button, Item, ItemText, List, Quantitas } from \"./ContactList.styled.\";\nimport { Button, Item, ItemText, List } from \"./ContactList.styled.\";\nimport { useDispatch, useSelector } from 'react-redux';\n//import { delClient } from \"redux/store\";\nimport { deleteContact } from \"redux/contacts/operations\";\n//import { getContacts, getFilterValue, getIsLoading } from \"redux/contacts/selectors\";\nimport { getContacts, getFilterValue } from \"redux/contacts/selectors\";\n//import { RotatingLines } from 'react-loader-spinner';\n\nexport const ContactList = ({onDeleteContact}) => {\n  const contacts  = useSelector(getContacts)\n  //console.log('ContactList-contacts :>>', contacts)\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilterValue);\n  //console.log('ContactList-filter :>>', filterValue);\n  //const isLoading = useSelector(getIsLoading)\n\n  const getFilteredContats = () => {\n    const filteredContats = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filteredContats;\n  };\n\n  // const quantitas = getFilteredContats().length;\n\n return  (\n  <>\n<List>\n{getFilteredContats().map(({id, name, number}) => (\n<Item key={id}>\n    <ItemText><span>{name} : </span><span>{number}</span> </ItemText>\n    <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button> </Item>\n    ))}\n</List>\n{/* <Quantitas>\n        Number of contacts:\n        {isLoading ? (\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"18\"\n            visible={true}\n          />\n        ) : (\n          <span>{quantitas}</span>\n        )}\n      </Quantitas> */}\n</>\n)};//\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Title, TitleList } from 'components/App.styled';\nimport ScrollToTop from 'react-scroll-to-top';\nimport { ContactForm } from 'components/ContactForrm/ContactForm';\nimport { FilterByName } from 'components/Filter/FilterByName';\nimport { ToastContainer } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { AiOutlineArrowUp } from 'react-icons/ai';\n// import { Helmet } from 'react-helmet';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ScrollToTop\n        smooth\n        style={{ borderRadius: '50%' }}\n        component={\n          <p style={{ color: 'gray', margin: 'auto', borderRadius: '50%' }}>\n            <AiOutlineArrowUp size={24} />\n          </p>\n        }\n      />\n      {/* <Helmet> */}\n        <Title>Phonebook</Title>\n      {/* </Helmet> */}\n      <ContactForm />\n      <TitleList>Contact</TitleList>\n      {isLoading && <Loader />}\n      <FilterByName />\n      {error ? (\n        <h2>Oops... something went wrong. Please reload the page</h2>\n      ) : (\n        <ContactList />\n      )}\n      <ToastContainer autoClose={1000} theme=\"colored\" />\n    </Container>\n  );\n}"],"names":["Container","styled","Title","TitleList","Form","Label","Inpute","Button","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilterValue","filter","ContactForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","target","some","contact","name","toLowerCase","value","alert","newContact","number","addContact","reset","type","pattern","title","required","FilterByName","onChange","htmlFor","id","setFilter","Loader","height","width","color","wrapperStyle","position","top","left","visible","ariaLabel","List","Item","ItemText","ContactList","onDeleteContact","filterValue","includes","map","onClick","deleteContact","Tasks","useEffect","fetchContacts","smooth","style","borderRadius","component","margin","size","autoClose","theme"],"sourceRoot":""}